<#
.SYNOPSIS
    Converts security audit CSV files to an interactive HTML report.
.DESCRIPTION
    This script takes CSV files generated by the Windows Security Toolkit audit scripts
    and converts them into a comprehensive, interactive HTML report with filtering,
    sorting, and search capabilities.
.EXAMPLE
    .\Convert-AuditToHtmlReport.ps1 -AuditDirectory "C:\SecurityAudit\UserAccountAudit_20250526_123456"
.NOTES
    File Name      : Convert-AuditToHtmlReport.ps1
    Author         : Windows Security Toolkit
    Prerequisite   : PowerShell 5.1 or later
#>

[CmdletBinding()]
param (
    [Parameter(Mandatory = $true)]
    [string]$AuditDirectory,
    
    [Parameter(Mandatory = $false)]
    [string]$ReportTitle = "Windows Security Audit Report",
    
    [Parameter(Mandatory = $false)]
    [string]$OutputFile = (Join-Path -Path $AuditDirectory -ChildPath "SecurityAuditReport_$(Get-Date -Format 'yyyyMMdd_HHmmss').html")
)

# Ensure the script stops on errors
$ErrorActionPreference = 'Stop'

function ConvertTo-HtmlTable {
    param (
        [Parameter(Mandatory = $true)]
        [string]$CsvPath,
        
        [Parameter(Mandatory = $true)]
        [string]$TableId,
        
        [Parameter(Mandatory = $true)]
        [string]$TableTitle
    )
    
    if (-not (Test-Path -Path $CsvPath)) {
        return "<div class='alert alert-warning'>CSV file not found: $CsvPath</div>"
    }
    
    try {
        $data = Import-Csv -Path $CsvPath
        if ($data.Count -eq 0) {
            return "<div class='alert alert-info'>No data found in: $TableTitle</div>"
        }
        
        $columns = $data[0].PSObject.Properties.Name
        
        $html = @"
<div class="card mb-4">
    <div class="card-header">
        <h5>$TableTitle</h5>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table id="$TableId" class="table table-striped table-bordered" style="width:100%">
                <thead>
                    <tr>
"@
        
        # Add table headers
        foreach ($column in $columns) {
            $html += "<th>$column</th>`n"
        }
        
        $html += @"
                    </tr>
                </thead>
                <tbody>
"@
        
        # Add table rows
        foreach ($row in $data) {
            $html += "<tr>`n"
            foreach ($column in $columns) {
                $value = $row.$column
                if ($null -eq $value) { $value = "" }
                $html += "<td>$value</td>`n"
            }
            $html += "</tr>`n"
        }
        
        $html += @"
                </tbody>
            </table>
        </div>
    </div>
</div>
<script>
    \$(document).ready(function() {
        \$('#$TableId').DataTable({
            responsive: true,
            dom: 'Bfrtip',
            buttons: [
                'copy', 'csv', 'excel', 'pdf', 'print'
            ]
        });
    });
</script>
"@
        
        return $html
    }
    catch {
        return "<div class='alert alert-danger'>Error processing $TableTitle: $_</div>"
    }
}

try {
    # Verify the audit directory exists
    if (-not (Test-Path -Path $AuditDirectory)) {
        throw "Audit directory not found: $AuditDirectory"
    }
    
    # Get all CSV files in the audit directory
    $csvFiles = Get-ChildItem -Path $AuditDirectory -Filter "*.csv"
    if ($csvFiles.Count -eq 0) {
        throw "No CSV files found in the audit directory"
    }
    
    Write-Host "Found $($csvFiles.Count) CSV files to process" -ForegroundColor Green
    
    # Get system information for the report header
    $computerInfo = [PSCustomObject]@{
        ComputerName = $env:COMPUTERNAME
        OSVersion = (Get-CimInstance -ClassName Win32_OperatingSystem).Caption
        ReportGenerated = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
        AuditDirectory = $AuditDirectory
    }
    
    # Create the HTML report
    $htmlHeader = @"
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>$ReportTitle</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- DataTables CSS -->
    <link href="https://cdn.datatables.net/1.11.5/css/dataTables.bootstrap5.min.css" rel="stylesheet">
    <link href="https://cdn.datatables.net/buttons/2.2.2/css/buttons.bootstrap5.min.css" rel="stylesheet">
    <link href="https://cdn.datatables.net/responsive/2.2.9/css/responsive.bootstrap5.min.css" rel="stylesheet">
    <style>
        body {
            padding-top: 20px;
            padding-bottom: 20px;
        }
        .report-header {
            margin-bottom: 30px;
        }
        .section-title {
            margin-top: 20px;
            margin-bottom: 10px;
            border-bottom: 1px solid #eee;
            padding-bottom: 5px;
        }
        .severity-high {
            background-color: #f8d7da !important;
        }
        .severity-medium {
            background-color: #fff3cd !important;
        }
        .severity-low {
            background-color: #d1ecf1 !important;
        }
        .nav-tabs {
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="report-header">
            <div class="row">
                <div class="col-md-8">
                    <h1>$ReportTitle</h1>
                    <p class="lead">Comprehensive security audit report for system analysis</p>
                </div>
                <div class="col-md-4 text-end">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">System Information</h5>
                            <p><strong>Computer Name:</strong> $($computerInfo.ComputerName)</p>
                            <p><strong>OS Version:</strong> $($computerInfo.OSVersion)</p>
                            <p><strong>Report Generated:</strong> $($computerInfo.ReportGenerated)</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <ul class="nav nav-tabs" id="reportTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="summary-tab" data-bs-toggle="tab" data-bs-target="#summary" type="button" role="tab" aria-controls="summary" aria-selected="true">Summary</button>
            </li>
"@

    # Create tab headers for each category
    $categories = @{
        "User" = @()
        "Network" = @()
        "System" = @()
        "Security" = @()
        "Other" = @()
    }
    
    # Categorize CSV files
    foreach ($csv in $csvFiles) {
        $fileName = $csv.Name
        
        if ($fileName -match "User|Account|Admin|Password|Group|Member") {
            $categories["User"] += $csv
        }
        elseif ($fileName -match "Network|Connection|IP|DNS|Firewall|Port|Share") {
            $categories["Network"] += $csv
        }
        elseif ($fileName -match "System|Hardware|Software|Service|Process|Task") {
            $categories["System"] += $csv
        }
        elseif ($fileName -match "Security|Audit|Log|Event|Vulnerability") {
            $categories["Security"] += $csv
        }
        else {
            $categories["Other"] += $csv
        }
    }
    
    # Add tab headers for non-empty categories
    foreach ($category in $categories.Keys) {
        if ($categories[$category].Count -gt 0) {
            $tabId = $category.ToLower()
            $htmlHeader += @"
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="$tabId-tab" data-bs-toggle="tab" data-bs-target="#$tabId" type="button" role="tab" aria-controls="$tabId" aria-selected="false">$category</button>
            </li>
"@
        }
    }
    
    $htmlHeader += @"
        </ul>
        
        <div class="tab-content" id="reportTabsContent">
            <div class="tab-pane fade show active" id="summary" role="tabpanel" aria-labelledby="summary-tab">
                <div class="row">
                    <div class="col-md-12">
                        <h3 class="section-title">Audit Summary</h3>
                        <div class="card mb-4">
                            <div class="card-body">
                                <p>This report contains the results of a security audit performed on $($computerInfo.ComputerName).</p>
                                <p>The audit was conducted on $($computerInfo.ReportGenerated) and includes the following categories:</p>
                                <ul>
"@

    # Add summary information
    foreach ($category in $categories.Keys) {
        if ($categories[$category].Count -gt 0) {
            $htmlHeader += "<li><strong>$category</strong>: $($categories[$category].Count) reports</li>`n"
        }
    }
    
    $htmlHeader += @"
                                </ul>
                                <p>Use the tabs above to navigate through the different sections of the report.</p>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-12">
                        <h3 class="section-title">Available Reports</h3>
                        <div class="list-group">
"@

    # Add links to all reports
    foreach ($csv in $csvFiles) {
        $reportName = $csv.BaseName
        $formattedName = $reportName -replace "([a-z])([A-Z])", '$1 $2'
        $htmlHeader += "<a href='#$($reportName)' class='list-group-item list-group-item-action'>$formattedName</a>`n"
    }
    
    $htmlHeader += @"
                        </div>
                    </div>
                </div>
            </div>
"@

    # Create tab content for each category
    foreach ($category in $categories.Keys) {
        if ($categories[$category].Count -gt 0) {
            $tabId = $category.ToLower()
            $htmlHeader += @"
            <div class="tab-pane fade" id="$tabId" role="tabpanel" aria-labelledby="$tabId-tab">
                <h3 class="section-title">$category Reports</h3>
"@
            
            # Add tables for this category
            foreach ($csv in $categories[$category]) {
                $tableId = $csv.BaseName
                $tableTitle = $tableId -replace "([a-z])([A-Z])", '$1 $2'
                $htmlHeader += "<!-- $tableTitle Table -->`n"
                $htmlHeader += "<div id='$tableId'></div>`n"
                $htmlHeader += "<script>document.getElementById('$tableId').innerHTML = generateTable('$($csv.FullName)', '$tableId', '$tableTitle');</script>`n"
            }
            
            $htmlHeader += "</div>`n"
        }
    }
    
    $htmlFooter = @"
        </div>
    </div>
    
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <!-- DataTables JS -->
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.2/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.2/js/buttons.bootstrap5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.2/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.2.2/js/buttons.print.min.js"></script>
    <script src="https://cdn.datatables.net/responsive/2.2.9/js/dataTables.responsive.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
    
    <script>
        function generateTable(csvPath, tableId, tableTitle) {
            // This function will be replaced with actual data during report generation
            return '';
        }
        
        // Initialize tabs
        var triggerTabList = [].slice.call(document.querySelectorAll('#reportTabs a'))
        triggerTabList.forEach(function (triggerEl) {
            var tabTrigger = new bootstrap.Tab(triggerEl)
            triggerEl.addEventListener('click', function (event) {
                event.preventDefault()
                tabTrigger.show()
            })
        })
    </script>
</body>
</html>
"@

    # Generate the full HTML with all tables
    $htmlContent = $htmlHeader
    
    # Process each CSV file and add its table to the HTML
    foreach ($csv in $csvFiles) {
        $tableId = $csv.BaseName
        $tableTitle = $tableId -replace "([a-z])([A-Z])", '$1 $2'
        $tableHtml = ConvertTo-HtmlTable -CsvPath $csv.FullName -TableId $tableId -TableTitle $tableTitle
        
        # Replace the placeholder with the actual table
        $placeholder = "<script>document.getElementById('$tableId').innerHTML = generateTable('$($csv.FullName)', '$tableId', '$tableTitle');</script>"
        $htmlContent = $htmlContent -replace [regex]::Escape($placeholder), $tableHtml
    }
    
    $htmlContent += $htmlFooter
    
    # Save the HTML report
    $htmlContent | Out-File -FilePath $OutputFile -Encoding utf8
    
    Write-Host "`nHTML report generated successfully!" -ForegroundColor Green
    Write-Host "Report saved to: $OutputFile" -ForegroundColor Cyan
    
    # Offer to open the report
    $openReport = Read-Host "`nWould you like to open the report? (Y/N)"
    if ($openReport -match '^[Yy]') {
        Invoke-Item -Path $OutputFile
    }
    
} catch {
    Write-Error "An error occurred: $_"
    Write-Error $_.ScriptStackTrace
    exit 1
}
